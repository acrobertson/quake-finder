{"version":3,"sources":["MapContainer.js","Nav.js","App.js","serviceWorker.js","index.js"],"names":["MapContainer","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","showingInfoWindow","activeMarker","selectedPlace","handleMarkerClick","props","marker","e","setState","onClose","inherits","createClass","key","value","prevProps","prevState","google","loadMap","currentLocation","recenterMap","maps","mapRef","refs","map","node","ReactDOM","findDOMNode","zoom","_this$state$initialCe","initialCenter","lat","lng","center","LatLng","mapConfig","assign","Map","loc","panTo","_this2","react_default","a","createElement","dist","quakes","quake","id","title","properties","place","mag","url","onClick","position","geometry","coordinates","name","visible","className","href","target","rel","Component","GoogleApiWrapper","apiKey","process","Nav","error","today","moment","format","reactstrap_es","onSubmit","handleSubmit","type","min","max","fromDate","onChange","handleInputChange","toDate","minMag","maxMag","color","App","event","defineProperty","preventDefault","URL","params","starttime","endtime","minmagnitude","maxmagnitude","keys","forEach","searchParams","append","fetch","then","res","json","result","isLoaded","features","resultCount","src_Nav","src_MapContainer","Boolean","window","location","hostname","match","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.486db1c1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { GoogleApiWrapper, Marker, InfoWindow, Map } from \"google-maps-react\";\nimport ReactDOM from \"react-dom\";\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {}\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n    if (prevState.currentLocation !== this.state.currentLocation) {\n      this.recenterMap();\n    }\n  }\n\n  loadMap() {\n    if (this.props && this.props.google) {\n      const { google } = this.props;\n      const maps = google.maps;\n\n      const mapRef = this.refs.map;\n\n      const node = ReactDOM.findDOMNode(mapRef);\n\n      let { zoom } = this.props;\n      const { lat, lng } = this.state.initialCenter;\n      const center = new maps.LatLng(lat, lng);\n      const mapConfig = Object.assign(\n        {},\n        {\n          center: center,\n          zoom: zoom\n        }\n      );\n\n      this.map = new maps.Map(node, mapConfig);\n    }\n  }\n\n  recenterMap() {\n    const map = this.map;\n    const loc = this.props.initialCenter;\n\n    const google = this.props.google;\n    const maps = google.maps;\n\n    if (map) {\n      let center = new maps.LatLng(loc.lat, loc.lng);\n      map.panTo(center);\n    }\n  }\n\n  handleMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        initialCenter={{ lat: 38.2556925, lng: -85.7512828 }}\n      >\n        {this.props.quakes.map(quake => (\n          <Marker\n            key={quake.id}\n            title={quake.properties.title}\n            place={quake.properties.place}\n            mag={quake.properties.mag}\n            url={quake.properties.url}\n            onClick={this.handleMarkerClick}\n            position={{\n              lat: quake.geometry.coordinates[0],\n              lng: quake.geometry.coordinates[1]\n            }}\n            name={\"current location\"}\n          />\n        ))}\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div className=\"InfoWindow\">\n            <h1>{this.state.selectedPlace.place}</h1>\n            <h2>{this.state.selectedPlace.mag} magnitude</h2>\n            <a\n              href={this.state.selectedPlace.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              More Info\n            </a>\n          </div>\n        </InfoWindow>\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_MAPS_API\n})(MapContainer);\n","import React, { Component } from \"react\";\nimport { Form, FormGroup, Input, Label, Button, Alert } from \"reactstrap\";\nimport moment from \"moment\";\n\nexport class Nav extends Component {\n  render() {\n    const error = this.props.error;\n    const today = moment().format(\"YYYY-MM-DD\");\n    return (\n      <div className=\"Nav\">\n        <div className=\"header\">\n          <h1>QUAKE FINDER</h1>\n        </div>\n        <Form onSubmit={this.props.handleSubmit}>\n          <p>\n            Select a date and magnitude range, click search, and check the map!\n          </p>\n          <div className=\"filters\">\n            <div className=\"range date-range\">\n              <h3>Date Range</h3>\n              <FormGroup>\n                <Label>From:</Label>\n                <Input\n                  type=\"date\"\n                  id=\"from-date\"\n                  name=\"fromDate\"\n                  min=\"1900-01-01\"\n                  max={today}\n                  value={this.props.fromDate}\n                  onChange={this.props.handleInputChange}\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label>To:</Label>\n                <Input\n                  type=\"date\"\n                  id=\"to-date\"\n                  name=\"toDate\"\n                  min=\"1900-01-01\"\n                  max={today}\n                  value={this.props.toDate}\n                  onChange={this.props.handleInputChange}\n                />\n              </FormGroup>\n            </div>\n\n            <div className=\"range mag-range\">\n              <h3>Magnitude Range</h3>\n              <div className=\"mag-inputs\">\n                <FormGroup>\n                  <label>From:</label>\n                  <input\n                    type=\"number\"\n                    id=\"min-mag\"\n                    name=\"minMag\"\n                    min=\"0\"\n                    max=\"9\"\n                    value={this.props.minMag}\n                    onChange={this.props.handleInputChange}\n                  />\n                </FormGroup>\n                <FormGroup>\n                  <label>To:</label>\n                  <input\n                    type=\"number\"\n                    id=\"to-mag\"\n                    name=\"maxMag\"\n                    min=\"1\"\n                    max=\"10\"\n                    value={this.props.maxMag}\n                    onChange={this.props.handleInputChange}\n                  />\n                </FormGroup>\n              </div>\n            </div>\n          </div>\n          <Button>search</Button>{\" \"}\n          {error && (\n            <Alert color=\"danger\">\n              Too many earthquakes! Try narrowing your search.\n            </Alert>\n          )}\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport MapContainer from \"./MapContainer\";\nimport Nav from \"./Nav\";\nimport \"./custom.scss\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fromDate: \"2017-12-24\",\n      toDate: \"2017-12-25\",\n      minMag: 0,\n      maxMag: 10,\n      error: null,\n      isLoaded: false,\n      resultCount: 0,\n      quakes: []\n    };\n  }\n\n  handleInputChange = event => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  };\n\n  // fetch quake data w/ provided filters\n  handleSubmit = event => {\n    event.preventDefault();\n\n    const url = new URL(\"https://earthquake.usgs.gov/fdsnws/event/1/query\");\n    const params = {\n      format: \"geojson\",\n      starttime: this.state.fromDate,\n      endtime: this.state.toDate,\n      minmagnitude: this.state.minMag,\n      maxmagnitude: this.state.maxMag\n    };\n    Object.keys(params).forEach(key =>\n      url.searchParams.append(key, params[key])\n    );\n\n    fetch(url.href)\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            quakes: result.features,\n            error: null\n          });\n        },\n        error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav\n          handleSubmit={this.handleSubmit}\n          handleInputChange={this.handleInputChange}\n          fromDate={this.state.fromDate}\n          toDate={this.state.toDate}\n          minMag={this.state.minMag}\n          maxMag={this.state.maxMag}\n          error={this.state.error}\n        />\n        <div className=\"Map\">\n          <MapContainer quakes={this.state.quakes} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}